// AmazonQ Generated
public class PrefixSum {
    
    // Build prefix sum array
    public static int[] buildPrefixSum(int[] arr) {
        if (arr == null || arr.length == 0) {
            return new int[0];
        }
        
        int[] prefixSum = new int[arr.length + 1];
        prefixSum[0] = 0; // Starting with 0 for easier range calculations
        
        for (int i = 0; i < arr.length; i++) {
            prefixSum[i + 1] = prefixSum[i] + arr[i];
        }
        
        return prefixSum;
    }
    
    // Get sum of range from index start to end (inclusive)
    public static int getRangeSum(int[] prefixSum, int start, int end) {
        if (prefixSum == null || start < 0 || end >= prefixSum.length - 1 || start > end) {
            throw new IllegalArgumentException("Invalid input parameters");
        }
        return prefixSum[end + 1] - prefixSum[start];
    }
    
    // Example usage
    public static void main(String[] args) {
        int[] arr = {1, 2, 3, 4, 5};
        int[] prefixSum = buildPrefixSum(arr);
        
        // Print prefix sum array
        System.out.println("Prefix Sum Array:");
        for (int num : prefixSum) {
            System.out.print(num + " ");
        }
        
        // Get sum of range [1,3]
        System.out.println("\nSum of range [1,3]: " + getRangeSum(prefixSum, 1, 3));
    }
}
